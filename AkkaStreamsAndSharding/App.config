<?xml version="1.0" encoding="utf-8"?>

<configuration>
  <configSections>
    <section name="akka" type="Akka.Configuration.Hocon.AkkaConfigurationSection, Akka" />
  </configSections>

  <startup> 
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.8" />
  </startup>

  <appSettings>
    <add key="NumberOfGraphs" value="200" />
    <add key="ShouldSendTicks" value="true" />
    <add key="SleepInBetweenTicks" value="10000" />
    <add key="NumberOfGraphBuilderRoutees" value="4" />
  </appSettings>

  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyInstrumentIdentity name="System.Memory" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.1.1" newVersion="4.0.1.1" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyInstrumentIdentity name="System.Runtime.CompilerServices.Unsafe" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.4.1" newVersion="4.0.4.1" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyInstrumentIdentity name="System.Collections.Immutable" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-1.2.5.0" newVersion="1.2.5.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <akka>
    <hocon>
      <![CDATA[
        custom {
          streams {
            akka {
              stdout-loglevel = INFO
              loglevel = INFO
              log-config-on-start = on
              
              loggers = ["Akka.Logger.NLog.NLogLogger, Akka.Logger.NLog"]
            
              actor {
                debug {
                      receive = on 
                      autoreceive = on
                      lifecycle = on
                      event-stream = on
                      unhandled = on
                  }
              
                creation-timeout = 600s
              }        
              stream {
                     materializer {               
                      subscription-timeout {
                         mode = cancel
                         timeout = 700s
                      }
                    }
                    
                     debug-logging = off
              }
            }
          }
          sharding {
            akka {
              stdout-loglevel = INFO
              loglevel = INFO
              log-config-on-start = on
              
              loggers = ["Akka.Logger.NLog.NLogLogger, Akka.Logger.NLog"]
            
              actor {
                debug {
                      receive = on 
                      autoreceive = on
                      lifecycle = on
                      event-stream = on
                      unhandled = on
                  }
              
                provider = "Akka.Cluster.ClusterActorRefProvider, Akka.Cluster"
                serializers {
                  hyperion = "Akka.Serialization.HyperionSerializer, Akka.Serialization.Hyperion"
                }
                serialization-bindings {
                  "System.Object" = hyperion
                }
                creation-timeout = 600s
              }
              remote {
                dot-netty.tcp {
                  hostname = 127.0.0.1
                  port = 5005
                }
              }
              cluster {
                auto-down-unreachable-after = 5s
                sharding {
                  least-shard-allocation-strategy.rebalance-threshold = 3
                  role = sharding
                  passivate-idle-entity-after = off
                }
                seed-nodes = ["akka.tcp://sharding-system@127.0.0.1:5005"]
                roles=["sharding"]
              }
            }
          }
        }
      ]]>
    </hocon>
  </akka>
</configuration>